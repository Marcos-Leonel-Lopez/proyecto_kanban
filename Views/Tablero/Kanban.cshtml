@{
    ViewData["Title"] = "Kanban";
    int idUsuarioLogueado = (int)ViewData["idUsuarioLogueado"];
}
@model KanbanViewModel

<section class="container-fluid tablero-kanban">
    <section class="d-flex overflow-auto" style="white-space: nowrap;"> <!-- Scroll horizontal -->
        @foreach (var estado in Enum.GetValues(typeof(MisEnums.EstadoTarea)))
        {
            <section class="me-3 col-md-4 columnas">
                <h4 class="text-center">@estado</h4>
                <section class="rounded p-2 d-flex flex-wrap justify-content-center">
                    @foreach (var tarea in Model.Tareas.Where(t => t.Id_estado == (MisEnums.EstadoTarea)estado))
                    {
                        <section class="card mb-3 mx-3">
                            <section class="card-body d-flex flex-column justify-content-around"
                                style="background-color: @tarea.Codigo_color"> @* color a la tarea *@
                                <!-- Cabecera  -->
                                @await Component.InvokeAsync("TareaCabecera", new
                                    {
                                        propietario = Model.EsPropietario,
                                        id_usuario_asignado = tarea.Id_usuario_asignado,
                                        usuarios = Model.Usuarios
                                    })
                                <!-- Cuerpo  -->
                                <h5 class="card-title">@tarea.Nombre</h5>
                                <p class="card-text overflow-auto">@tarea.Descripcion</p>
                                <!-- Botones  -->
                                <section class="d-flex justify-content-between">
                                    <!-- Botón para editar tarea -->
                                    @await Component.InvokeAsync("TareaEditarEstado", new
                                        {
                                            tareaActual = tarea,
                                            idUsuarioLogueadoActual = idUsuarioLogueado
                                        })
                                    <!-- Botón para reasignar tarea -->
                                    @await Component.InvokeAsync("TareaReasignar", new
                                        {
                                            tareaActual = tarea,
                                            esPropietario =
                                             Model.EsPropietario,
                                            usuarios = @Model.Usuarios
                                        })
                                </section>
                            </section>
                        </section>
                    }
                </section>
            </section>
        }
    </section>
</section>
